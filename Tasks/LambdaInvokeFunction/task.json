{
    "id": "c9e49f96-6c7d-4420-97f1-5e0dfd816354",
    "name": "LambdaInvokeFunction",
    "friendlyName": "AWS Lambda Invoke Function",
    "description": "Invokes an AWS Lambda function with a JSON payload.",
    "author": "Amazon Web Services",
    "helpMarkDown": "Please refer to [AWS Lambda Developer Guide](https://docs.aws.amazon.com/lambda/latest/dg/) for more information on working with AWS Lambda.",
    "category": "Deploy",
    "visibility": [
        "Build",
        "Release"
    ],
    "demands": [],
    "version": {
        "Major": "1",
        "Minor": "0",
        "Patch": "21"
    },
    "minimumAgentVersion": "1.91.0",
    "instanceNameFormat": "Invoke Lambda Function: $(functionName)",
    "groups": [
        {
            "name": "OutputOptions",
            "displayName": "Output",
            "isExpanded": false,
            "visibleRule": "invocationType = RequestResponse"
        },
        {
            "name": "diagnostic",
            "displayName": "Diagnostic",
            "isExpanded": false
        }
    ],
    "inputs": [
        {
            "name": "awsCredentials",
            "type": "connectedService:AWS",
            "label": "AWS Credentials",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "Specifies the AWS credentials (a service endpoint type of 'AWS') to be used by the task in the build agent environment.\n\nIf credentials are not explicitly configured via a service endpoint the task will attempt to obtain the credentials to be used from the environment hosting the build agent using standard AWS environment variables - _AWS_ACCESS_KEY_ID_, _AWS_SECRET_ACCESS_KEY_ and optionally _AWS_SESSION_TOKEN_.\n\nFor tasks running in build agents hosted on Amazon EC2 instances (Windows or Linux) an attempt will be made to obtain credentials using the instance metadata associated with the EC2 instance if no credentials are configured on the task with a service endpoint or set in environment variables."
        },
        {
            "name": "regionName",
            "label": "AWS Region",
            "type": "string",
            "required": false,
            "defaultValue": "",
            "helpMarkDown": "The AWS region code (us-east-1, us-west-2 etc) of the region containing the AWS resource(s) the task will use or create. For more information see [AWS Regions and Endpoints](https://docs.aws.amazon.com/general/latest/gr/rande.html).\n\nIf a region is not explicitly configured the task will attempt to obtain the region to be used using the standard AWS environment variable _AWS_REGION_ in the build agent's environment. Tasks running in build agents hosted on Amazon EC2 instances (Windows or Linux) will also attempt to obtain the region using the instance metadata associated with the EC2 instance if no region is configured on the task or set in the environment variable."
        },
        {
            "name": "functionName",
            "type": "string",
            "label": "Function Name",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "The name of the Lambda function to invoke. You can also specify the Amazon Resource Name (ARN) of the function."
        },
        {
            "name": "payload",
            "type": "multiLine",
            "label": "Payload",
            "defaultValue": "",
            "helpMarkDown": "The JSON formatted payload to pass to the function."
        },
        {
            "name": "invocationType",
            "type": "pickList",
            "label": "Invocation Type",
            "defaultValue": "RequestResponse",
            "options": {
                "Event": "Asynchronous execution",
                "RequestResponse": "Synchronous execution, returning the output from the function."
            }
        },
        {
            "name": "outputVariable",
            "type": "string",
            "label": "Output Variable",
            "defaultValue": "",
            "groupName": "OutputOptions",
            "helpMarkDown": "The name of the variable that will contain the function output on task completion. The variable can be used as $(variableName) to refer to the function result in subsequent tasks.",
            "required": false
        },
        {
            "name": "logType",
            "type": "pickList",
            "label": "Log Type",
            "defaultValue": "None",
            "helpMarkDown": "For synchronous execution, returns the base64-encoded last 4 KB of log data produced by your Lambda function in the x-amz-log-result header.",
            "groupName": "OutputOptions",
            "options": {
                "None": "None",
                "Tail": "Tail"
            }
        },
        {
            "name": "logRequest",
            "type": "boolean",
            "label": "Log Request",
            "defaultValue": "false",
            "required": false,
            "helpMarkDown": "If selected, request headers and other data for calls to AWS services are logged to the task's debug log.",
            "groupName": "diagnostic"
        },
        {
            "name": "logResponse",
            "type": "boolean",
            "label": "Log Response",
            "defaultValue": "false",
            "required": false,
            "helpMarkDown": "If selected, the response metadata and body content of non-streaming responses from calls to AWS services are output to the task's debug log. The unique request ID, which can be useful when contacting AWS for support, is always logged to the task output regardless of this option setting.",
            "groupName": "diagnostic"
        }
    ],
    "execution": {
        "Node": {
            "target": "LambdaInvokeFunction.js",
            "argumentFormat": ""
        }
    },
    "messages": {
        "InvokingFunction": "Invoking function %s",
        "FunctionInvokeFailed": "Error invoking function",
        "SettingOutputVariable": "Setting output variable %s with the function output",
        "ReceivedOutput": "Received output %s from function",
        "FunctionDoesNotExist": "Function %s does not exist",
        "TaskCompleted": "Completed invocation of Lambda function %s"
    }
}
