{
    "id": "B6D19A53-DC5F-4B71-A49C-63E87F49E9AB",
    "name": "SecretsManagerGetSecret",
    "friendlyName": "AWS Secrets Manager Get Secret",
    "description": "Stores the value of a secret in AWS Secrets Manager into a secret build variable.",
    "author": "Amazon Web Services",
    "helpMarkDown": "Please refer to [Secrets Manager](https://docs.aws.amazon.com/secretsmanager/latest/userguide/) for more information.\n\nMore information on this task can be found in the [task reference](https://docs.aws.amazon.com/vsts/latest/userguide/secretsmanager-getsecret.html).",
    "category": "Deploy",
    "visibility": [
        "Build",
        "Release"
    ],
    "demands": [],
    "version": {
        "Major": "1",
        "Minor": "0",
        "Patch": "22"
    },
    "minimumAgentVersion": "1.91.0",
    "instanceNameFormat": "Secrets Manager Get Secret: $(secretId)",
    "groups": [
        {
            "name": "diagnostic",
            "displayName": "Diagnostic",
            "isExpanded": false
        }
    ],
    "inputs": [
        {
            "name": "awsCredentials",
            "type": "connectedService:AWS",
            "label": "AWS Credentials",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "Specifies the AWS credentials to be used by the task in the build agent environment.\n\nYou can specify credentials using a service endpoint (of type _AWS_) in the task configuration or you can leave unspecified. If unspecified the task will attempt to use credentials set in environment variables in the build agent process or, if the build agent is running on an Amazon EC2 instance, the task can obtain and use credentials from the instance metadata associated with the EC2 instance. For credentials to be available from EC2 instance metadata the instance must have been started with an instance profile referencing a role granting permissions to the task to make calls to AWS on your behalf. See [Using an IAM Role to Grant Permissions to Applications Running on Amazon EC2 Instances](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-ec2.html) for more information.\n\nWhen using environment variables in the build agent process you may use the standard AWS environment variables - _AWS_ACCESS_KEY_ID_, _AWS_SECRET_ACCESS_KEY_ and optionally _AWS_SESSION_TOKEN_."
        },
        {
            "name": "regionName",
            "label": "AWS Region",
            "type": "string",
            "required": false,
            "defaultValue": "",
            "helpMarkDown": "The AWS region code (us-east-1, us-west-2 etc) of the region containing the AWS resource(s) the task will use or create. For more information see [AWS Regions and Endpoints](https://docs.aws.amazon.com/general/latest/gr/rande.html).\n\nIf a region is not explicitly configured the task will attempt to obtain the region to be used using the standard AWS environment variable _AWS_REGION_ in the build agent's environment. Tasks running in build agents hosted on Amazon EC2 instances (Windows or Linux) will also attempt to obtain the region using the instance metadata associated with the EC2 instance if no region is configured on the task or set in the environment variable."
        },
        {
            "name": "secretIdOrName",
            "label": "Secret ID/Name",
            "type": "string",
            "required": true,
            "defaultValue": "",
            "helpMarkDown": "Specifies the secret containing the version that you want to retrieve. You can specify either the Amazon Resource Name (ARN) or the friendly name of the secret."
        },
        {
            "name": "variableName",
            "label": "Variable Name",
            "type": "string",
            "required": true,
            "defaultValue": "",
            "helpMarkDown": "The name of the build variable to hold the value of the secret. *Note*: The variable will automatically be set to 'secret' mode."
        },
        {
            "name": "versionId",
            "label": "Version ID",
            "type": "string",
            "required": false,
            "defaultValue": "",
            "helpMarkDown": "Specifies the unique identifier of the version of the secret that you want to retrieve. If you specify this parameter then don't specify _Version Stage_. If you don't specify either a _Version Stage_ or _Version ID_ then the default is to perform the operation on the version with the version stage value of _AWSCURRENT_."
        },
        {
            "name": "versionStage",
            "label": "Version Stage",
            "type": "string",
            "required": false,
            "defaultValue": "",
            "helpMarkDown": "Specifies the version of the secret that you want to retrieve using the staging label attached to the version.\n\nStaging labels are used to keep track of different versions during the rotation process. If you use this parameter then don't specify _Version ID_. If you don't specify either a _Version Stage_ or _Version ID_, then the default is to perform the operation on the version with the version stage value of _AWSCURRENT_."
        },
        {
            "name": "logRequest",
            "type": "boolean",
            "label": "Log Request",
            "defaultValue": "false",
            "required": false,
            "helpMarkDown": "If selected, request headers and other data for calls to AWS services are logged to the task's debug log.",
            "groupName": "diagnostic"
        },
        {
            "name": "logResponse",
            "type": "boolean",
            "label": "Log Response",
            "defaultValue": "false",
            "required": false,
            "helpMarkDown": "If selected, the response metadata and body content of non-streaming responses from calls to AWS services are output to the task's debug log. The unique request ID, which can be useful when contacting AWS for support, is always logged to the task output regardless of this option setting.",
            "groupName": "diagnostic"
        }
    ],
    "execution": {
        "Node": {
            "target": "SecretsManagerGetSecret.js",
            "argumentFormat": ""
        }
    },
    "messages": {
        "RetrievingSecret": "Reading value for secret '%s'.",
        "TaskCompleted": "Successfully read the secret into the build variable '%s'."
    }
}
